{"mappings":"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","sources":["src/chart-principal.js"],"sourcesContent":["async function getWeatherData() {\n  const API_KEY = '07aed853a2b3116bf7e19dfeee63b968';\n  const city = 'Bucharest';\n\n  try {\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\n    );\n\n    const weatherData = response.data.list\n      .filter((item, index) => index % 8 === 0)\n      .map(item => item.main.temp);\n\n    const labels = response.data.list\n      .filter((item, index) => index % 8 === 0)\n      .map(item => {\n        const date = new Date(item.dt * 1000);\n        const day = date.getDate().toString().padStart(2, '0');\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n        const year = date.getFullYear();\n        return `${day}/${month}/${year}`;\n      });\n\n    return { weatherData, labels };\n  } catch (error) {\n    console.error('Eroare la obținerea datelor meteorologice:', error);\n    return null;\n  }\n}\n\nasync function getHumidityData() {\n  const API_KEY = '07aed853a2b3116bf7e19dfeee63b968';\n  const city = 'Bucharest';\n\n  try {\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\n    );\n\n    const humidityData = response.data.list\n      .filter((item, index) => index % 8 === 0)\n      .map(item => item.main.humidity);\n    const labels = response.data.list\n      .filter((item, index) => index % 8 === 0)\n      .map(item => {\n        const date = new Date(item.dt * 1000);\n        const day = date.getDate().toString().padStart(2, '0');\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n        const year = date.getFullYear();\n        return `${day}/${month}/${year}`;\n      });\n\n    return { humidityData, labels };\n  } catch (error) {\n    console.error('Eroare la obținerea datelor de umiditate:', error);\n    return null;\n  }\n}\n\nasync function getWindData() {\n  const API_KEY = '07aed853a2b3116bf7e19dfeee63b968';\n  const city = 'Bucharest';\n\n  try {\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\n    );\n\n    const windData = response.data.list\n      .filter((item, index) => index % 8 === 0)\n      .map(item => item.wind.speed);\n    const labels = response.data.list\n      .filter((item, index) => index % 8 === 0)\n      .map(item => {\n        const date = new Date(item.dt * 1000);\n        const day = date.getDate().toString().padStart(2, '0');\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n        const year = date.getFullYear();\n        return `${day}/${month}/${year}`;\n      });\n\n    return { windData, labels };\n  } catch (error) {\n    console.error('Eroare la obținerea datelor pentru viteza vantului:', error);\n    return null;\n  }\n}\n\nasync function getAtmosphereData() {\n  const API_KEY = '07aed853a2b3116bf7e19dfeee63b968';\n  const city = 'Bucharest';\n\n  try {\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\n    );\n\n    const atmosphereData = response.data.list\n      .filter((item, index) => index % 8 === 0)\n      .map(item => item.main.pressure);\n\n    const labels = response.data.list\n      .filter((item, index) => index % 8 === 0)\n      .map(item => {\n        const date = new Date(item.dt * 1000);\n        const day = date.getDate().toString().padStart(2, '0');\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n        const year = date.getFullYear();\n        return `${day}/${month}/${year}`;\n      });\n\n    return { atmosphereData, labels };\n  } catch (error) {\n    console.error(\n      'Eroare la obținerea datelor pentru presiunea atmosferica:',\n      error\n    );\n    return null;\n  }\n}\n\nasync function generateWeatherChart() {\n  const weatherData = await getWeatherData();\n  const humidityData = await getHumidityData();\n  const windData = await getWindData();\n  const atmosphereData = await getAtmosphereData();\n  if (weatherData) {\n    const ctx = document.getElementById('myChart').getContext('2d');\n    const chartFont = () => {\n      if (window.innerWidth < 480) {\n        return 12;\n      } else {\n        return 18;\n      }\n    };\n    new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: weatherData.labels,\n        datasets: [\n          {\n            label: 'Temperature',\n            data: weatherData.weatherData,\n            borderColor: 'rgb(255, 107, 9)',\n            borderWidth: 2,\n            fill: false,\n          },\n          {\n            label: 'Humidity',\n            data: humidityData.humidityData,\n            borderColor: 'rgb(9, 6, 235)',\n            borderWidth: 2,\n            fill: false,\n          },\n          {\n            label: 'Wind Speed',\n            data: windData.windData,\n            borderColor: 'rgb(234, 154, 5)',\n            borderWidth: 2,\n            fill: false,\n          },\n          {\n            label: 'Atmosphere pressure',\n            data: atmosphereData.atmosphereData,\n            borderColor: 'rgb(6, 120, 6)',\n            borderWidth: 2,\n            fill: false,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        scales: {\n          x: {\n            grid: {\n              color: 'rgb(100, 100, 100)',\n            },\n            ticks: {\n              color: 'rgb(100, 100, 100)',\n            },\n            title: {\n              display: true,\n              text: 'Date[dd/mm/yyyy]',\n              color: 'rgb(100, 100, 100)',\n              font: {\n                size: chartFont(),\n              },\n            },\n          },\n          y: {\n            beginAtZero: true,\n            grid: {\n              color: 'rgb(100, 100, 100)',\n            },\n            ticks: {\n              color: 'rgb(100, 100, 100)',\n            },\n            title: {\n              display: true,\n              text: 'Value of Indicators',\n              color: 'rgb(100, 100, 100)',\n              font: {\n                size: chartFont(),\n              },\n            },\n          },\n        },\n      },\n    });\n    const chartContainer = document.querySelector('.chart-container');\n    chartContainer.classList.add('hidden');\n\n    localStorage.setItem('chartContainerActivated', 'false');\n  }\n}\n\ngenerateWeatherChart();\n\nconst chartCanvas = document.getElementById('myChart');\nconst toggleButton = document.getElementById('chartButton');\n\nwindow.addEventListener('load', function () {\n  const chartState = localStorage.getItem('chartContainerActivated');\n\n  if (chartState === 'true') {\n    chartCanvas.style.display = 'block';\n    toggleButton.innerText = 'Hide Chart';\n  } else {\n    chartCanvas.style.display = 'none';\n    toggleButton.innerText = 'Show Chart';\n  }\n});\n\ntoggleButton.addEventListener('click', function (event) {\n  event.preventDefault();\n  if (chartCanvas.style.display === 'none') {\n    chartCanvas.style.display = 'block';\n    toggleButton.innerText = 'Hide Chart';\n    localStorage.setItem('chartContainerActivated', 'true');\n  } else {\n    chartCanvas.style.display = 'none';\n    toggleButton.innerText = 'Show Chart';\n    localStorage.setItem('chartContainerActivated', 'false');\n  }\n});\n\nchartCanvas.style.display = 'none';\n"],"names":["async","weatherData","response","axios","get","data","list","filter","item","index","map","main","temp","date","Date","dt","getDate","toString","padStart","getMonth","getFullYear","error","console","$9066132339487e38$var$getWeatherData","humidityData","humidity","$9066132339487e38$var$getHumidityData","windData","wind","speed","$9066132339487e38$var$getWindData","atmosphereData","pressure","$9066132339487e38$var$getAtmosphereData","ctx","document","getElementById","getContext","chartFont","window","innerWidth","Chart","type","labels","datasets","label","borderColor","borderWidth","fill","options","responsive","scales","x","grid","color","ticks","title","display","text","font","size","y","beginAtZero","querySelector","classList","add","localStorage","setItem","$9066132339487e38$var$generateWeatherChart","$9066132339487e38$var$chartCanvas","$9066132339487e38$var$toggleButton","addEventListener","getItem","style","innerText","event","preventDefault"],"version":3,"file":"index.0e326c26.js.map"}